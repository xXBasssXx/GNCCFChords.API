// <auto-generated />
using System;
using GNCCFChords.API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GNCCFChords.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240805040143_updateChordTable")]
    partial class updateChordTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GNCCFChords.API.Model.ChordPart", b =>
                {
                    b.Property<Guid>("ChordPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BridgeChords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChordKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ChorusChords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroChords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreChorusChords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChordPartId");

                    b.HasIndex("SongId");

                    b.ToTable("ChordParts");
                });

            modelBuilder.Entity("GNCCFChords.API.Model.LyricPart", b =>
                {
                    b.Property<Guid>("LyricPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LyricContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LyricPartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LyricPartId");

                    b.HasIndex("SongId");

                    b.ToTable("LyricParts");
                });

            modelBuilder.Entity("GNCCFChords.API.Model.Song", b =>
                {
                    b.Property<Guid>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SongId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("GNCCFChords.API.Model.ChordPart", b =>
                {
                    b.HasOne("GNCCFChords.API.Model.Song", "Song")
                        .WithMany("ChordParts")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Song");
                });

            modelBuilder.Entity("GNCCFChords.API.Model.LyricPart", b =>
                {
                    b.HasOne("GNCCFChords.API.Model.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Song");
                });

            modelBuilder.Entity("GNCCFChords.API.Model.Song", b =>
                {
                    b.Navigation("ChordParts");
                });
#pragma warning restore 612, 618
        }
    }
}
